public class post
{
	static int cat = nan;
	static object item = null;
}

extern void object::B23()
{
	GrabEnergy();
	Builder(PowerStation, 6);
	Recharge();
	BringTo(BlackBox, PowerStation);
	BringTo(BlackBox, SpaceShip);
	takeoff();
}

void GrabEnergy()
{
	GrabCat(WheeledGrabber);
	drop(Behind);      // and drop it behind
	grab(EnergyCell);  // take the cell from the bot
	drop(InFront);     // and drop it in front
	grab(Behind);      // take the new cell
	drop(EnergyCell);
}

void object::Recharge()
{
	object item = radar(PowerStation);
	errgoto(item.position);
	while(this.energyCell.energyLevel < 1) wait(1);
}

point FindSpace(int cat, float rad)
{
	object item = radar(cat);
	point pos;
	float r = 0;
	ipf(10000);
	while(true)
	{
		for(int i = 0; i < 360; i += 5)
		{
			pos.x = item.position.x + r*cos(i);
			pos.y = item.position.y + r*sin(i);
			pos = flatspace(pos, rad, rad, 50, rad);
			if(flatground(pos, 50) >= rad && topo(pos) > 1) return pos;
		}
		r += 20;
	}
	return pos;
}

void Builder(int cat, float rad)
{
	post info = new post();
	GrabCat(Titanium);
	point place = FindSpace(SpaceShip, rad);
	errgoto(place);
	move(-1.5);
	drop();
	info.cat = cat;
	info.item = radar(Titanium);
	place = FindSpace(Titanium, rad/2);
	errgoto(place);
	while(radar(cat) == null) wait(1);
}

void GrabCat(int cat)
{
	object item = radar(cat);
	errgoto(item.position);
	if(cat == WheeledGrabber)
	{
		motor(1, 1);
		wait(1);
	}
	grab();
}

void BringTo(int cat, int target)
{
	GrabCat(cat);
	while(radar(target) == null) wait(1);
	object item = radar(target);
	errgoto(item.position);
	drop();
}

public void errgoto(point pos)
{
	errmode(0);
	int err = goto(pos);
	while(err != 0) err = goto(pos);
	errmode(1);
}
